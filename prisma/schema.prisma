generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int     @id @default(autoincrement())
  reference    String  @unique
  ean          String  @unique
  description  String  @unique
  size         String
  category1    String
  category2    String
  currentPrice Float
  timePeriod   String
  gender       Gender
  img          String?
  axis         String
  brandId      Int
  brand        Brand?  @relation(fields: [brandId], references: [id])
  sales        Sale[]
  favouritedBy User[]  @relation("ProductToUser")
}

model Sale {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  date        DateTime @db.Date
  productId   Int
  sellerId    Int
  productSold Product  @relation(fields: [productId], references: [id])
  seller      User     @relation(fields: [sellerId], references: [id], onDelete: Cascade)
}

model User {
  id               Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  name             String
  email            String      @unique
  password         String
  accountType      AccountType @default(Staff)
  staffID          String?
  sales            Sale[]
  brands           Brand[]     @relation("BrandToUser")
  favoriteProducts Product[]   @relation("ProductToUser")

  pointOfSaleId Int?
  pointOfSale   PointOfSale? @relation(fields: [pointOfSaleId], references: [id])
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String
  logo     String
  products Product[]
  users    User[]    @relation("BrandToUser")
}

model PointOfSale {
  id      Int    @id @default(autoincrement())
  name    String
  country String

  users User[]
}

enum Gender {
  UNISEX
  MEN
  WOMEN
}

enum Axis {
  Perfume
  Beauty
  Skincare
}

enum AccountType {
  Staff
  Marketing
  Training
  Sales
  Admin
}
